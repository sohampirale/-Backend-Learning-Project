            for(int i=0;i<=str1Size;i++){
                tabuMatrix[i][0]=temp;
                temp+=str1[i];
            }
            //hope it works
            for(int i=1;i<=str1Size;i++){
                for(int j=1;j<=str2Size;j++){
                    if(str1[i-1]==str2[j-1]){
                        tabuMatrix[i][j]=tabuMatrix[i-1][j-1]+str1[i-1];
                    } else {
                        string up=tabuMatrix[i-1][j]+str1[i-1];
                        string left=tabuMatrix[i][j-1]+str2[j-1];
                        if(up.size()<=left.size()){
                            tabuMatrix[i][j]=up;
                        } else {
                            tabuMatrix[i][j]=left;
                        }
                    }
                }
            }
            return tabuMatrix[str1Size][str2Size];
        } else if(choice==3){
            vector<string>prev(str2Size+1,"");
            string temp="";
            for(int i=1;i<=str2Size;i++){
                temp+=str2[i-1];
                prev[i]=temp;
            }
            for(int i=1;i<=str1Size;i++){
                vector<string>curr(str2Size+1,"");
                string currStr="";
                for(int k=0;k<i;k++){
                    currStr+=str1[k];
                }
                curr[0]=currStr;
                for(int j=1;j<=str2Size;j++){
                    if(str1[i-1]==str2[j-1]){
                        curr[j]=prev[j-1]+str1[i-1];
                    } else {
                        if(prev[j].size()<=curr[j-1].size()){
                            curr[j]=prev[j]+str1[i-1];
                        } else {
                            curr[j]=curr[j-1]+str2[j-1];
                        }
                    }
                }
                prev=curr;
            }
            return prev[str2Size];
        } else if(choice==4){
            string lcsStr=findLongestCommonSubsequence(str1,str2);
            // cout<<"lcsStr = "<<lcsStr<<endl;
            vector<vector<char>>map(lcsStr.size()+1,vector<char>(0));

            int index=0;
            for(int i=0;i<str1Size;i++){
                if(str1[i]==lcsStr[index]){
                    index++;
                } else {
                    map[index].push_back(str1[i]);
                }
            }
            index=0;
            for(int i=0;i<str2Size;i++){
                if(str2[i]==lcsStr[index]){
                    index++;
                } else {
                    map[index].push_back(str2[i]);
                }
            }
            string ans="";
            for(int i=0;i<map.size();i++){
                for(int j=0;j<map[i].size();j++){
                    ans+=map[i][j];
                }
                if(i==lcsStr.size())continue;
                ans+=lcsStr[i];
            }
            // cout<<"ans = "<<ans<<endl;
            return ans;
        } else if(choice==5){
            //test case failling
            vector<vector<int>>tabuMatrix(str1Size+1,vector<int>(str2Size+1,0));
            for(int i=1;i<=str1Size;i++){
                for(int j=1;j<=str2Size;j++){
                    if(str1[i-1]==str2[j-1]){
                        tabuMatrix[i][j]=1+tabuMatrix[i-1][j-1];
                    } else {
                        tabuMatrix[i][j]=max(tabuMatrix[i-1][j],tabuMatrix[i][j-1]);
                    }
                }
            }
            string ans="";
            int i=str1Size;
            int j=str2Size;
            while(i!=0&&j!=0){
                if(str1[i-1]==str2[j-1]){
                    ans+=str1[i-1];
                    i--;
                    j--;
                } else {
                    int curr=tabuMatrix[i][j];
                    if(tabuMatrix[i-1][j]==curr){
                        ans+=str1[i-1];
                        i--;
                    } else {
                        ans+=str2[j-1];
                        j--;
                    }
                }
            }

            if(i==0&&j==0){
                reverse(ans.begin(),ans.end());
                return ans;
            }
            else if(i==0){
                // cout<<"j = "<<j<<endl;
                for(int k=j-1;k>=0;k--){
                    // cout<<"HI"<<endl;
                    ans+=str2[k];
                }
            } else if(j==0){
                // cout<<"i = "<<i<<endl;
                for(int k=i-1;k>=0;k--){
                    // cout<<"hey"<<endl;
                    ans+=str1[k];
                }
            }
            reverse(ans.begin(),ans.end());
            return ans;
        }
        
        return "adbc";
    }
};